1、选择优化的数据类型
1.1 整数类型
tinyint   1 byte
smallint  2 byte
mediumint 3 byte
int       4 byte
bigint    8 byte

取值范围 [-2（N-1）]---[+2（N-1）-1]  N是位数

每个整数都有unsigned属性，表示不允许负值，这大致可以使整数的上限提高一倍
例如：tinyint范围-128~127   tinyint unsigned范围0~255

整数类型分为有符号和无符号类型，两种使用相同的存储空间，并具有相同的性能，可以根据
实际情况选择合适的类型

1.2 实数类型
float    4 byte
double   8 byte
    使用标准的浮点运算进行近似计算
decimal
    用于存储精确的小数，支持精确的计算；
    decimal(18,9) 通过指定占大小
    CPU不支持decimal的至二级计算，所以mysql服务器自身实现了decimal的高精度计算

因为需要额外的空间和计算开销，所以应该尽量只在对小数进行精确计算时才使用decimal-如存储财务数据。
但在数据量比较打的时候，可以考虑使用bigint代替decimal，将需要存储的货币单位根据小数的位数乘以相应的倍数即可。这样能避免decimal的计算代价高的问题。

1.3 字符串类型

1.4 日期和时间
year
date
datetime  8 byte
timestamp 4 byte

1.5 位数据类型

