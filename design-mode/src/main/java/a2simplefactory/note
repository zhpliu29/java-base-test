before
1、违反单一职责：Chart类职责过重，不仅负责创建（初始化），还负责显示
2、违反开闭原则：如果要添加新类型的图标，必须修改Chart类源码
3、耦合度高：Chart对象需要使用new关键字创建，Chart类与客户端类耦合度较高
4、使用了很多if----else----

引入【简单工厂模式=静态工厂模式（由于创建实例的方式是静态的）】

定义：
    定义一个工厂类，可以根据参数的不同返回不同类的实例，被创建的实例通常有共同的父类。

结构：
    工厂角色
    抽象产品角色 具体产品角色

优点：
    符合单一职责：仅负责创建对象
    降低耦合度：客户端不用new创建对象，仅需知道获取具体产品的参数，
缺点：
    违反开闭原则：如果要添加新类型的图表（新产品），必须修改工厂类
    使用了很多if----else----

适用场景：
    工厂类负责创建的对象比较少，不会使工厂方法中的业务逻辑太过复杂
    客户端只知道传入工厂类的参数，对于如何创建对象并不关心