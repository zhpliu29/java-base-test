实例：
    彩笔:3种型号，12种颜色，共36个类
    毛笔:3种型号，12种颜色，共15个类；-->>抽象出两个维度：型号和颜色
添加一种型号的彩笔，需要添加12个类；毛笔仅需添加新的型号；

引入【桥接模式】

定义：
    将抽象部分与其实现部分分离，使它们都可以独立的变化。

角色：
    抽象类：通常是抽象类而不是接口，其中定义了一个实现类接口类型的对象
    具体类：实现抽象类中的抽象业务方法
    另一个维度的抽象类：
    另一个维度的抽象类的具体类

优点：
缺点：
    需要正确的事变出两个独立变化的维度


适用场景：
    使用提醒：在该模式中，首先应该识别出一个列所具有的两个独立变化的维度，将它们设计为两个
    独立的继承等级结构，为两个维度都提供抽象层，并建立抽象耦合。

    对于那些不希望使用继承或因为多层继承导致系统类的个数急剧增加的系统，该模式尤其适用，见首部实例。


适配器模式与桥接模式的区别：
1、解决的问题不同；
2、使用于设计的不同阶段。桥接模式用于系统设计的初步设计；初步完成设计之后，发现系统
与已有类无法协同工作时候，使用适配器模式。