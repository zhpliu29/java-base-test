在软件开发中，有时存在不兼容的情况，也可以引入一个电源适配器的角色协调这些不兼容的结构

引入【适配器模式】

定义：
    将一个借口转换成客户希望的另一个接口，使接口不兼容的那些类可以一起工作，其别名为包装器。
    提到的接口是指广义的接口，可以表示一个方法或者方法的集合。

角色：
【类适配器模式】：使用继承的方式，受仅仅能继承一个类的限制，如果目标类中有多个接口，适配者类中无法提供所有接口所要适配的接口，造成无法适配，需要另外新建类去继承其它的适配者类从而完成剩余接口的适配。
    目标抽象类
    适配器类：目标抽象类的实现
    适配者类
【对象适配器模式】：可以不受仅仅能继承一个类的限制，使用更灵活。
    目标抽象类
    适配器类：目标抽象类的实现
    适配者类
【双向适配器模式】：在对象适配器模式上的改进，适配器类中同时持有目标抽象类、适配者抽象类的引用
    目标抽象类
    适配器类：目标抽象类的实现
    适配者抽象类
    适配者具体类
【缺省适配器模式】：
    当不需要实现一个接口所提供的的所有方法是，可以先设计一个抽象类实现该接口，并为接口体用一个默认实现（空方法），
    那么该抽象类的子类可以选择性的覆盖父类的某些方法来实现需求，它适用于不想适用一个接口中的所有方法的情况。

    适配者接口
    缺省适配器类：通常定义为抽象类
    具体适配器类
    适配者类

优点：
缺点：
    使用继承的方式，一次最多只能适配一个适配者类，不能同时适配多个适配者。


适用场景：
    系统需要使用一些现有的类，而这些类的接口不符合系统的需要

