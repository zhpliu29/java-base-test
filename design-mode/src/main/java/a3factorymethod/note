为了解决静态工厂的两个缺点

引入【工厂方法模式】

定义：
    定义一个用于创建对象的接口，让子类决定将哪一个类实例化。该模式将类的实例化延迟到其子类

结构：
    抽象工厂  具体工厂
    抽象产品  具体产品

优点：
    解决了静态工厂的两个痛点
    [违反开闭原则：如果要添加新类型的图表（新产品），必须修改工厂类
     使用了很多if----else----]
缺点：
    如果新增的产品很多，会增加很多的产品类和具体工厂类

适用场景：

